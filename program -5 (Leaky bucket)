#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>

int trand(int a) {
    int rn;
    rn = rand() % 10;
    rn = rn % a;
    if (rn == 0)
        rn = 1;
    return rn;
}

int main() {
    int i, packet[5], psz, bsz, pszrn = 0, clk, ptime, premain, orate, flag = 0;

    for (i = 0; i < 5; i++)
        packet[i] = trand(6) * 10;

    printf("\nEnter the output rate: ");
    scanf("%d", &orate);

    printf("\nEnter the bucket size: ");
    scanf("%d", &bsz);

    for (i = 0; i < 5; i++) {
        if ((packet[i] + pszrn) > bsz) {
            printf("\nIncoming packet size %d is greater than bucket size - REJECTED", packet[i]);
        } else {
            for (;;) {
                premain = 4 - i;
                psz = packet[i];
                pszrn += psz;
                printf("\nIncoming packet size is %d", psz);
                printf("\nNumber of packets waiting for transmission = %d", pszrn);

                ptime = trand(4) * 10;
                printf("\nNext packet will come at %d seconds", ptime);

                for (clk = 0; clk <= ptime; clk++) {
                    printf("\nTime left = %d seconds", ptime - clk);
                    sleep(1);

                    if (pszrn) {
                        if (pszrn >= orate) {
                            printf("\n%d bytes are transmitted", orate);
                            pszrn -= orate;
                        } else {
                            printf("\n%d bytes transmitted", pszrn);
                            pszrn = 0;
                        }
                        printf("\nBytes remaining = %d", pszrn);
                    } else {
                        printf("\nBucket is empty");
                    }
                }

                if (pszrn != 0)
                    flag = 1;

                break;
            }
        }
    }

    printf("\n\n");
    return 0;
}
